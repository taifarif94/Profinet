    # LogBookData with
    # BlockVersionLow = 0
    # BlockHeader, ActualLocalTimeStamp, NumberOfLogEntries, (LocalTimeStamp, ARUUID,
    # PNIOStatus, EntryDetail)*

    # BlockHeader BlockType, BlockLength, BlockVersionHigh, BlockVersionLow
    # BlockType: 0x0019
    profinet_data.extend(['0x00', '0x19'])
    # BlockLength
    # 5.2.1.2 Coding of the field BlockLength
    # This field shall be coded as data type Unsigned16 with the values according to Table 557.
    # Table 557 – BlockLength
    # Value
    # (hexadecimal) Meaning
    # 0x0000 – 0x0002 Reserved
    # 0x0003 – 0xFFFF Number of octets without counting the fields BlockType and BlockLength
    # ???

    # 5.2.1.3 Coding of the field BlockVersionHigh
    # 8796 This field shall be coded as data type Unsigned8 with the values according to Table 558.
    # 8797 Table 558 – BlockVersionHigh
    # Value
    # (hexadecimal) Meaning Use
    # 0x00 Reserved —
    # 0x01 Version 1 Indicates version 1
    # 0x02 – 0xFF Reserved —
    profinet_data.append('0x01')

    # 5.2.1.4 Coding of the field BlockVersionLow
    # 8800 This field shall be coded as data type Unsigned8 with the values according to Table 559.
    # 8801 Table 559 – BlockVersionLow
    # Value
    # (hexadecimal) Meaning Use
    # 0x00 Version 0 Indicates version 0
    # 0x01 Version 1 Indicates version 1
    # 0x02 – 0xFF Version 2 to version 255 Indicates version 2 to 255
    profinet_data.append('0x00')

    # 5.2.24.1 Coding of the field ActualLocalTimeStamp
    # 11937 This field shall be coded as data type Unsigned64 according to Table 1047.
    # 11938 Table 1047 – ActualLocalTimeStamp
    # Value
    # (hexadecimal)
    # Meaning Use
    # 0x0000000000000000 – 0xFFFFFFFFFFFFFFFF Contains the current cycle count
    # value when reading the logbook. —
    profinet_data.extend(['0x00', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00'])

    # 5.2.24.3 Coding of the field NumberOfLogEntries
    # 11945 This field shall be coded as data type Unsigned16 according to Table 1049.
    # 11946 Table 1049 – NumberOfLogEntries
    # Value Meaning Use
    # 0 Reserved —
    # Other Number of log entries —
    profinet_data.extend(['0x00', '0x01'])

    # 5.2.24.2 Coding of the field LocalTimeStamp
    # 11941 This field shall be coded as data type Unsigned64 according to Table 1048.
    # 11942 Table 1048 – LocalTimeStamp
    # Value
    # (hexadecimal)
    # Meaning Use
    # 0x0000000000000000 – 0xFFFFFFFFFFFFFFFF
    # Contains the current cycle count
    # when storing the entry to the
    # logbook.
    # —
    profinet_data.extend(['0x00', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00', '0x01'])

    # 0000000000000000000000000000000000000000000000000000000000000000
    # 5.2.4.47 Coding of the field ARUUID
    # 9306 This field shall be coded as data type UUID according to Table 635, Table 636, Table 637, and
    # 9307 Table 638.
    # 9308 Table 635 – ARUUID
    # Value
    # (UUID)
    # Meaning Use
    # 00000000-0000-0000-0000-000000000000 Reserved The value NIL indicates the usage of the
    # implicit AR.
    # 6+8+2 Octets
    profinet_data.extend(['0x00', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00','0x00', '0x00', '0x00', '0x00', '0x00', '0x00', '0x00', '0x01'])

    # PNIOStatus
    # ErrorCode = 0,
    # ErrorDecode = 0,
    # ErrorCode1 = 0,
    # ErrorCode2 = 0
    profinet_data.extend(['0x00', '0x00', '0x00', '0x00'])

    # EntryDetail
    # This field shall be coded as data type Unsigned32 
    profinet_data.extend(['0x00', '0x00', '0x00', '0x00'])
    # The length field in the IP layer needs to be set.